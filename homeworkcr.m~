% 2017 Sprint EE 380
% Homework CR
% Aaron Turner
% #011502541

% MATLAB Correlation Regression funciton
function homeworkcr

% --------------------------------------------------------------------
% Fire problem
% --------------------------------------------------------------------

display(' ');
display('-----------------------------------------------------------');
display('Fire Problem');
display('-----------------------------------------------------------');
display(' ');

% Define our data
numFiresX = [72 69 58 47 84 62 57 45];
numAcresBurnedY = [62 42 19 26 51 15 30 15];

% Find our sample size
n = 8;
% Degrees of freedom is n - 2 (Because of two variables)
df = n - 2;

% Create a scatter plot
figure(1);
scatter(numFiresX, numAcresBurnedY);

% Find our correlation coeffecient
r = corr2(numFiresX, numAcresBurnedY);

% Do the hypothesis Tests (Level of significance 5%)

% Find our TV (Test value)    
tv = r * sqrt((df) / (1 - r^2));

% Critical Value of two tailed test with 5%
cv = 2.776;

% See if the TV Passed the CV
tv
cv
if (abs(tv) > cv)
    display('Reject Ho');
    display('There may be a linear correlation');
else
    display('Do not Reject Ho');
    display('There may not be a linear correlation');
end

% Draw a line of regression
figure(1);
plotregression(numFiresX, numAcresBurnedY);
title('Fires Problem');

% --------------------------------------------------------------------
% Alumni Problem
% --------------------------------------------------------------------

display(' ');
display('-----------------------------------------------------------');
display('Alumni Problem');
display('-----------------------------------------------------------');
display(' ');

% Define our variables
yearsX = [1 5 3 10 7 6];
contributionsY = [500 100 300 50 75 80];

% Find our sample size
n = 6;
% Degrees of freedom is n - 2 (Because of two variables)
df = n - 2;

% Create a scatter plot
figure(2);
scatter(yearsX, contributionsY);

% Find our correlation coeffecient
r = corr2(yearsX, contributionsY);

% Do the hypothesis Tests (Level of significance 5%)

% Find our TV (Test value)    
tv = r * sqrt((df) / (1 - r^2));

% Critical Value of two tailed test with 5%
cv = 2.776;

% See if the TV Passed the CV
tv
cv
if (abs(tv) > cv)
    display('Reject Ho');
    display('There may be a linear correlation');
else
    display('Do not Reject Ho');
    display('There may not be a linear correlation');
end

% Draw a line of regression
figure(2);
plotregression(yearsX, contributionsY);
title('Alumni Problem');

% --------------------------------------------------------------------
% Fire problem (In Class, Final Exam Practice)
% --------------------------------------------------------------------

display(' ');
display('-----------------------------------------------------------');
display('Fire Problem (In Class, Final Exam practice)');
display('-----------------------------------------------------------');
display(' ');

% Two Vectors of the data
% Define our data
numFiresX = [72 69 58 47 84 62 57 45];
numAcresBurnedY = [62 42 19 26 51 15 30 15];

% Find our sample size
n = 8;
% Degrees of freedom is n - 2 (Because of two variables)
df = n - 2;

% Create a scatter plot
figure(3);
scatter(numFiresX, numAcresBurnedY);
% Define some properties of the graph
title('Fires Problem, Scatter Plot (In Class, Final Problem Practice)');
xlabel('Number of Fires');
ylabel('Number of Acres burned');

% Hold on, to ensure points on graph arent lost
hold on;

% Find our correlation coeffecient
r = corr2(numFiresX, numAcresBurnedY);

% Do the hypothesis Tests (Level of significance 5%)

% Find our TV (Test value)    
tv = r * sqrt((df) / (1 - r^2));

% Critical Value of two tailed test with 5%
cv = 2.776;

% See if the TV Passed the CV
tv
cv
if (abs(tv) > cv)
    display('Reject Ho');
    display('There may be a linear correlation');
else
    display('Do not Reject Ho');
    display('There may not be a linear correlation');
end

% Draw a line of regression
% Regression Function
denominator = n * sum(numFiresX.*numFiresX) - (sum(numFiresX))^2;
a = (sum(numAcresBurnedY).*sum(numFiresX.*numFiresX) - sum(numFiresX).*sum(numFiresX.*numAcresBurnedY))/denominator;
b = (n * sum(numFiresX.*numAcresBurnedY) - sum(numFiresX)*sum(numAcresBurnedY))/denominator;

% Steps for points on the plot
step = [min(numFiresX):0.1:max(numFiresX)];
out = a + b*step;
plot(step, out, 'g-');
% Hold on to our plotted line
hold on

% Find the output when the 60
out = a + b*60;
plot(60,out,'r*')

% Display the answer
display('For 60 fires, the number of acres burned would be:')
end

